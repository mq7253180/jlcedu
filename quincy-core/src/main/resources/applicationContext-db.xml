<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" default-lazy-init="true" 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
">
	<bean id="dataSourceMaster" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.master.url}"/>
        <property name="username" value="${jdbc.master.username}"/>
        <property name="password" value="${jdbc.master.password}"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="maxIdle" value="100"/>
        <property name="minIdle" value="1"/>
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxOpenPreparedStatements" value="0"/>
        <property name="removeAbandonedTimeout" value="120"/>
        <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
        <property name="minEvictableIdleTimeMillis" value="18000000"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnReturn" value="true"/>
    </bean>
    <bean id="dataSourceSlave" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.slave.url}"/>
        <property name="username" value="${jdbc.slave.username}"/>
        <property name="password" value="${jdbc.slave.password}"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="maxIdle" value="100"/>
        <property name="minIdle" value="1"/>
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxOpenPreparedStatements" value="0"/>
        <property name="removeAbandonedTimeout" value="120"/>
        <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
        <property name="minEvictableIdleTimeMillis" value="18000000"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnReturn" value="true"/>
    </bean>
    <bean id="dynamicDataSource" class="com.quincy.core.db.RoutingDataSource">
       <property name="targetDataSources">
           <map>
               <entry value-ref="dataSourceMaster" key="master"></entry>
               <entry value-ref="dataSourceSlave" key="slave"></entry>
           </map>
       </property>
       <property name="defaultTargetDataSource" ref="dataSourceMaster" />
   	</bean>
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceMaster"/>
	</bean>
	<bean id="bbtTransactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager">
            <ref bean="dataSourceTransactionManager"/>
        </property>
    </bean>
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>

    <bean id="mybatisSqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dynamicDataSource"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-cfg.xml"/>
        <property name="mapperLocations">
        	<array>
                <value>classpath*:mybatis/mapper/*.xml</value>
            </array>
        </property>
    </bean>
    <bean id="mybatisMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="mybatisSqlSessionFactoryBean"/>
        <property name="basePackage" value="com.jlcedu.db.mapper"/>
    </bean>

	<bean id="messageSource" class="com.quincy.core.db.DBReloadableResourceBundleMessageSource">
		<property name="basenames">
        	<array>
                <value>classpath:i18n/quincy</value>
                <value>classpath:i18n/text</value>
            </array>
        </property>
        <property name="useCodeAsDefaultMessage" value="true" />
        <property name="dataSource" ref="dataSourceSlave" />
    </bean>

	<!-- Spring数据源 -->
	<!--bean id="dataSourceSpring" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>oracle.jdbc.OracleDriver</value>
		</property>
		<property name="url">
			<value>${jdbc-1.url}</value>
		</property>
		<property name="username">
			<value>${jdbc-1.uname}</value>
		</property>
		<property name="password">
			<value>${jdbc-1.pwd}</value>
		</property>
	</bean-->

    <!-- JNDI数据源 -->
	<!--jee:jndi-lookup id="dataSourceJndi" jndi-name="${jndi.dataSource}" resource-ref="true"/-->
	<!--bean id="dataSourceJndi" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>${jndi.dataSource}</value>
		</property>
		<property name="resourceRef">
			<value>true</value>
		</property>
	</bean-->
    
	<!-- 事务的传播特性 -->
	<!--tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice-->
	<!-- 那些类那些方法使用事务 -->
	<!--aop:config>
		<aop:pointcut id="allServiceMethod" expression="execution(* com.ssh2.spring.service.*.*(..))"/>
		<aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice"/>
	</aop:config-->
	

	<!-- bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
    </bean-->
	<!-- context:annotation-config/-->
</beans>
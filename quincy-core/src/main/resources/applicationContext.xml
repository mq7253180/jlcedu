<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" default-lazy-init="true" 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
">
	<import resource="classpath*:applicationContext-*.xml" />

	<aop:aspectj-autoproxy/>
	<context:annotation-config/>

	<context:component-scan base-package="com">
		<context:exclude-filter expression="org.springframework.stereotype.Controller" type="annotation"/>   
	</context:component-scan>
	<!-- 如果配置了component-scan可以不配置 annotation-config, 提供了两个子标签include-filter和exclude-filter-->
	<!-- context:annotation-config /-->

	<bean id="corePropertiesFactoryBean" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:core.properties</value>
                <value>classpath:com-*.properties</value>
            </list>
        </property>
    </bean>
    <bean id="corePropertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties" ref="corePropertiesFactoryBean" />
    </bean>
    <!--或-->
    <!-- <context:property-placeholder location="classpath:*.properties" /> -->

	<bean id="attributeTemplateDirectiveModelBean" class="com.quincy.core.freemarker.AttributeTemplateDirectiveModelBean"/>
    <bean id="i18NTemplateDirectiveModelBean" class="com.quincy.core.freemarker.I18NTemplateDirectiveModelBean">
    	<property name="properties" ref="corePropertiesFactoryBean" />
    </bean>
    <bean id="propertiesTemplateDirectiveModelBean" class="com.quincy.core.freemarker.PropertiesTemplateDirectiveModelBean">
    	<property name="properties" ref="corePropertiesFactoryBean" />
    </bean>

	<!-- i18n -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
    <!-- intercepter -->
    <mvc:interceptors>
        <bean class="com.quincy.core.interceptor.I18NInterceptor"/>
    </mvc:interceptors>
	<!-- freemarker -->
	<bean id="freemarkerPropertiesFactoryBean" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:freemarker.properties"/>
    </bean>
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/pages/" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerSettings" ref="freemarkerPropertiesFactoryBean" />
		<property name="freemarkerVariables">
			<map>
				<entry key="attr" value-ref="attributeTemplateDirectiveModelBean"/>
				<entry key="i18n" value-ref="i18NTemplateDirectiveModelBean"/>
				<entry key="property" value-ref="propertiesTemplateDirectiveModelBean"/>
			</map>
		</property>
	</bean>
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="requestContextAttribute" value="request" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="allowSessionOverride" value="true" />
	</bean>
	<!-- Controller returns json -->
	<bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
    </bean>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJackson2HttpMessageConverter"/>
            </list>
        </property>
        <property name="webBindingInitializer">
            <bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
                <property name="validator" ref="validator"/>
            </bean>
        </property>
    </bean>
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

</beans>